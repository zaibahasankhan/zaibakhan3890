#Bulk RNAseq Analysis: from raw sequences to count matrix 

#Set up the working directory
getwd()
setwd("$PATH")

#Load required packages
library(R.utils)
library(Rsubread)
library(data.table)
library(Rqc)
library(fastqcr)

#Download the data (FastQ files) 
url.S1R1<-"ftp.sra.ebi.ac.uk/vol1/fastq/SRR592/006/SRR5924196/SRR5924196_1.fastq.gz"
destination.1<-"SRR5924196_1.fastq.gz"
download.file(url.S1R1,destination.1)

url.S1R2<-"ftp.sra.ebi.ac.uk/vol1/fastq/SRR592/006/SRR5924196/SRR5924196_2.fastq.gz"
destination.1<-"SRR5924196_2.fastq.gz"
download.file(url.S1R2,destination.1)

url.S2R1<-"ftp.sra.ebi.ac.uk/vol1/fastq/SRR592/008/SRR5924198/SRR5924198_1.fastq.gz"
destination.2<-"SRR5924198_1.fastq.gz"
download.file(url.S2R1,destination.2)

url.S2R2<-"ftp.sra.ebi.ac.uk/vol1/fastq/SRR592/008/SRR5924198/SRR5924198_2.fastq.gz"
destination.2<-"SRR5924198_2.fastq.gz"
download.file(url.S2R2,destination.2)

# Extract quality scores
qs <- qualityScores(filename="SRR5924196_1.fastq.gz",nreads=100)
qs
qs <- qualityScores(filename="SRR5924196_2.fastq.gz",nreads=100)
qs

#same for 2 more paired sequences 

# Check dimension of qs
dim(qs)
# Check first few elements of qs with head
head(qs)
#To look at the overall distribution of quality scores across the 100 reads
boxplot(qs)


#Download Genome 
url<-"ftp://ftp.ensembl.org/pub/release-96/fasta/saccharomyces_cerevisiae/dna/Saccharomyces_cerevisiae.R64-1-1.dna_sm.toplevel.fa.gz"
destination<-"Saccharomyces_cerevisiae.R64-1-1.dna_sm.toplevel.fa.gz"
download.file(url,destination)

#To unzip genome file
gunzip(destination)

#Download GTF file
url<-"ftp://ftp.ensembl.org/pub/release-96/gtf/saccharomyces_cerevisiae/Saccharomyces_cerevisiae.R64-1-1.96.gtf.gz"
destination<-"Saccharomyces_cerevisiae.R64-1-1.96.gtf.gz"
download.file(url,destination)

#To unzip gtf file
gunzip(destination)

#Renaming the downloaded S. cerevisiae genome and gtf 
genome <- "Saccharomyces_cerevisiae.R64-1-1.dna_sm.toplevel.fa"
gtf <- "Saccharomyces_cerevisiae.R64-1-1.96.gtf"

#To run fastqc 
fastqc_install()
fastqc()
qc <- qc_aggregate("FASTQC/")
qc


#To build Index
buildindex(basename = "Sacc_index_rsubread",
           reference = genome,
           indexSplit=F)

#listing files
#reads1 <- list.files(pattern = "_1.fastq$" )
#reads2 <- list.files(pattern = "_2.fastq$" )


reads1 <- list.files(pattern = "_1.fastq.gz$" )
reads2 <- list.files(pattern = "_2.fastq.gz$" )

all.equal(length(reads1),length(reads2))

#Aligning reads with the reference genome 
align(index="Sacc_index_rsubread",
      readfile1=reads1,
      readfile2=reads2,
      input_format="gzFASTQ",
      output_format="BAM",
      nthreads=10)

#To check the BAM files
bam.files <- list.files(pattern = ".BAM$", full.names = TRUE)
bam.files

#To get a summary of the proportion of reads mapped to the reference  
props <- propmapped(files=bam.files)
props

#To generate Feature counts 
feature.count <- featureCounts(files = bam.files,
                       annot.ext=gtf,
                       GTF.featureType="exon",
                       GTF.attrType="gene_id",
                       isGTFAnnotationFile=TRUE,
                       isPairedEnd = TRUE)

counts <- data.frame(feature.count[["counts"]])
colnames(counts) <- c("Normal", "Tumor")              #sample 1 and sample 2
